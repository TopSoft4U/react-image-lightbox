// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot Testing Lightbox renders properly" 1`] = `
<ReactImageLightbox
  activeIndex={0}
  animationDisabled={false}
  animationDuration={300}
  clickOutsideToClose={true}
  closeLabel="Close lightbox"
  discourageDownloads={false}
  enableZoom={true}
  imageLoadErrorMessage="This image failed to load"
  imagePadding={10}
  images={
    Array [
      Object {
        "full": "/fake/image/src1.jpg",
      },
      Object {
        "full": "/fake/image/src.jpg",
      },
      Object {
        "full": "/fake/image/src2.jpg",
        "title": "Some title",
      },
    ]
  }
  infiniteScrolling={true}
  keyRepeatKeyupBonus={40}
  keyRepeatLimit={180}
  loadAhead={1}
  nextLabel="Next image"
  onCloseRequest={[Function]}
  prevLabel="Previous image"
  showToolbar={true}
  zoomInLabel="Zoom in"
  zoomOutLabel="Zoom out"
>
  <div
    className="ril-outer"
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    onWheel={[Function]}
    tabIndex={-1}
  >
    <div
      className="ril-toolbar"
    >
      <ul
        className="ril-toolbar-side ril-toolbar-left"
      >
        <li
          className="ril-toolbar-item"
        >
          <span
            className="ril-toolbar-item-child"
          >
            Some title
          </span>
        </li>
      </ul>
      <ul
        className="ril-toolbar-side ril-toolbar-right"
      >
        <ForwardRef
          className="ril-zoom-in"
          disabled={false}
          key="zoom-in"
          label="Zoom in"
          onClick={[Function]}
        >
          <li
            className="ril-toolbar-item"
          >
            <button
              aria-label="Zoom in"
              className="ril-toolbar-item-child ril-builtin-btn ril-zoom-in"
              disabled={false}
              key="close"
              onClick={[Function]}
              title="Zoom in"
              type="button"
            />
          </li>
        </ForwardRef>
        <ForwardRef
          className="ril-zoom-out"
          disabled={true}
          key="zoom-out"
          label="Zoom out"
          onClick={[Function]}
        >
          <li
            className="ril-toolbar-item"
          >
            <button
              aria-label="Zoom out"
              className="ril-toolbar-item-child ril-builtin-btn ril-zoom-out ril-builtin-btn-disabled"
              disabled={true}
              key="close"
              title="Zoom out"
              type="button"
            />
          </li>
        </ForwardRef>
        <ForwardRef
          className="ril-close"
          disabled={false}
          key="close"
          label="Close lightbox"
          onClick={[Function]}
        >
          <li
            className="ril-toolbar-item"
          >
            <button
              aria-label="Close lightbox"
              className="ril-toolbar-item-child ril-builtin-btn ril-close"
              disabled={false}
              key="close"
              onClick={[Function]}
              title="Close lightbox"
              type="button"
            />
          </li>
        </ForwardRef>
      </ul>
    </div>
    <ForwardRef
      activeIndex={0}
      animationDisabled={false}
      animationDuration={300}
      discourageDownloads={false}
      getBestImageForType={[Function]}
      images={
        Array [
          Object {
            "errorMessage": false,
            "full": "/fake/image/src1.jpg",
            "hasError": false,
            "shouldLoad": true,
          },
          Object {
            "errorMessage": false,
            "full": "/fake/image/src.jpg",
            "hasError": false,
            "shouldLoad": true,
          },
          Object {
            "errorMessage": false,
            "full": "/fake/image/src2.jpg",
            "hasError": false,
            "shouldLoad": true,
            "title": "Some title",
          },
        ]
      }
      isSnapAnimating={false}
      key="scroller"
      loadAhead={1}
      onImageDoubleClick={[Function]}
      onImageWheel={[Function]}
      x={-0}
      y={-0}
      zoom={1}
    >
      <div
        className="ril-inner"
        style={
          Object {
            "transform": "translate3d(0%, 0, 0)",
            "transition": "transform 300ms",
          }
        }
      >
        <div
          className="ril-test"
        >
          <div
            className="ril-image-wrapper ril-not-loaded"
            key="/fake/image/src1.jpg-0-0"
            onDoubleClick={[Function]}
            onDragStart={[Function]}
            onWheel={[Function]}
            style={
              Object {
                "backgroundImage": undefined,
                "transform": "translate3d(0px,0px,0) scale3d(1,1,1)",
                "transition": undefined,
              }
            }
          >
            <div
              className="ril-loading-container"
            >
              <Loader>
                <div
                  className="ril-loader"
                >
                  <svg
                    className="svg-container"
                    height="100"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <circle
                      className="ril-loader-svg ril-loader-bg"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                    <circle
                      className="ril-loader-svg ril-loader-animate"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                  </svg>
                </div>
              </Loader>
            </div>
          </div>
          <div
            className="ril-image-wrapper ril-not-loaded"
            key="/fake/image/src.jpg-0-1"
            onDragStart={[Function]}
            style={
              Object {
                "backgroundImage": undefined,
              }
            }
          >
            <div
              className="ril-loading-container"
            >
              <Loader>
                <div
                  className="ril-loader"
                >
                  <svg
                    className="svg-container"
                    height="100"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <circle
                      className="ril-loader-svg ril-loader-bg"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                    <circle
                      className="ril-loader-svg ril-loader-animate"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                  </svg>
                </div>
              </Loader>
            </div>
          </div>
          <div
            className="ril-image-wrapper ril-not-loaded"
            key="/fake/image/src2.jpg-0-2"
            onDragStart={[Function]}
            style={
              Object {
                "backgroundImage": undefined,
              }
            }
          >
            <div
              className="ril-loading-container"
            >
              <Loader>
                <div
                  className="ril-loader"
                >
                  <svg
                    className="svg-container"
                    height="100"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <circle
                      className="ril-loader-svg ril-loader-bg"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                    <circle
                      className="ril-loader-svg ril-loader-animate"
                      cx="50"
                      cy="50"
                      r="45"
                    />
                  </svg>
                </div>
              </Loader>
            </div>
          </div>
        </div>
      </div>
    </ForwardRef>
    <button
      aria-label="Previous image"
      className="ril-nav-buttons ril-prev-button"
      key="prev"
      onClick={[Function]}
      title="Previous image"
      type="button"
    />
    <button
      aria-label="Next image"
      className="ril-nav-buttons ril-next-button"
      key="next"
      onClick={[Function]}
      title="Next image"
      type="button"
    />
  </div>
</ReactImageLightbox>
`;
